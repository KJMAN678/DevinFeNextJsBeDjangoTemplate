services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.mac
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - "NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}"
    command: npm run build-and-dev
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    environment:
      - "DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}"
      - "DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}"
      - "DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}"
      - "DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}"
    command: sh /app/backend/start.sh
    depends_on:
      - db

  db:
    image: postgres:17.5-alpine3.21
    ports:
        - "5432"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  playwright_browsers:
